"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CryptoJS = require("crypto-js");
class RequestUtil {
    /**
     * Generates headers for request signing.
     */
    static sign(secret, req) {
        const now = req.timestamp || Date.now();
        const payload = [req.method, req.url, now];
        // Check if should sign body as well
        if (req.method.toUpperCase() === "POST" || req.method.toUpperCase() === "PUT") {
            payload.push(req.body);
        }
        // Generate signature using HMAC SHA 256
        const signature = CryptoJS.HmacSHA256(payload.join(","), secret);
        return {
            "X-Request-Signature": signature.toString(),
            "X-Request-Timestamp": now.toString()
        };
    }
}
exports.default = RequestUtil;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi91dGlscy9SZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQXNDO0FBY3RDO0lBQ0U7O09BRUc7SUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQWMsRUFBRSxHQUEwQjtRQUMzRCxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN4QyxNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUUzQyxvQ0FBb0M7UUFDcEMsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxLQUFLLE1BQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxLQUFLLEtBQUssRUFBRTtZQUM3RSxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN4QjtRQUVELHdDQUF3QztRQUN4QyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFakUsT0FBTztZQUNMLHFCQUFxQixFQUFFLFNBQVMsQ0FBQyxRQUFRLEVBQUU7WUFDM0MscUJBQXFCLEVBQUUsR0FBRyxDQUFDLFFBQVEsRUFBRTtTQUN0QyxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBckJELDhCQXFCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENyeXB0b0pTIGZyb20gXCJjcnlwdG8tanNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBSZXF1ZXN0U2lnbmluZ0hlYWRlcnMge1xuICBcIlgtUmVxdWVzdC1TaWduYXR1cmVcIjogc3RyaW5nO1xuICBcIlgtUmVxdWVzdC1UaW1lc3RhbXBcIjogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RTaWduaW5nT3B0aW9ucyB7XG4gIG1ldGhvZDogc3RyaW5nO1xuICB1cmw6IHN0cmluZztcbiAgYm9keT86IHN0cmluZztcbiAgdGltZXN0YW1wPzogc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlcXVlc3RVdGlsIHtcbiAgLyoqXG4gICAqIEdlbmVyYXRlcyBoZWFkZXJzIGZvciByZXF1ZXN0IHNpZ25pbmcuXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIHNpZ24oc2VjcmV0OiBzdHJpbmcsIHJlcTogUmVxdWVzdFNpZ25pbmdPcHRpb25zKTogUmVxdWVzdFNpZ25pbmdIZWFkZXJzIHtcbiAgICBjb25zdCBub3cgPSByZXEudGltZXN0YW1wIHx8IERhdGUubm93KCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IFtyZXEubWV0aG9kLCByZXEudXJsLCBub3ddO1xuXG4gICAgLy8gQ2hlY2sgaWYgc2hvdWxkIHNpZ24gYm9keSBhcyB3ZWxsXG4gICAgaWYgKHJlcS5tZXRob2QudG9VcHBlckNhc2UoKSA9PT0gXCJQT1NUXCIgfHwgcmVxLm1ldGhvZC50b1VwcGVyQ2FzZSgpID09PSBcIlBVVFwiKSB7XG4gICAgICBwYXlsb2FkLnB1c2gocmVxLmJvZHkpO1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXRlIHNpZ25hdHVyZSB1c2luZyBITUFDIFNIQSAyNTZcbiAgICBjb25zdCBzaWduYXR1cmUgPSBDcnlwdG9KUy5IbWFjU0hBMjU2KHBheWxvYWQuam9pbihcIixcIiksIHNlY3JldCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgXCJYLVJlcXVlc3QtU2lnbmF0dXJlXCI6IHNpZ25hdHVyZS50b1N0cmluZygpLFxuICAgICAgXCJYLVJlcXVlc3QtVGltZXN0YW1wXCI6IG5vdy50b1N0cmluZygpXG4gICAgfTtcbiAgfVxufVxuIl19