"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("../base");
const OAuthCredentials_1 = require("./OAuthCredentials");
var UserStatus;
(function (UserStatus) {
    UserStatus["ACTIVE"] = "active";
    UserStatus["INACTIVE"] = "inactive";
})(UserStatus = exports.UserStatus || (exports.UserStatus = {}));
var UserRole;
(function (UserRole) {
    UserRole["ROOT"] = "root";
    UserRole["USER"] = "user";
})(UserRole = exports.UserRole || (exports.UserRole = {}));
class User extends base_1.BaseModel {
    constructor(data) {
        super(data);
        this.virtual = false;
        this.lastName = data.lastName;
        this.firstName = data.firstName;
        this.email = data.email;
        this.password = data.password;
        this.role = data.role;
        this.status = data.status;
        this.virtual = (data.credentials && data.credentials.virtual) ?
            data.credentials.virtual :
            (data.virtual || this.virtual);
        // Relationship attributes enforcing
        this.credentials = (data.credentials ? (data.credentials instanceof OAuthCredentials_1.default ? data.credentials : new OAuthCredentials_1.default(data.credentials)) : undefined);
    }
    get name() {
        return `${this.firstName} ${this.lastName}`;
    }
    set name(_ignoredValue) {
        throw new Error('Name is a readonly value, you must edit "firstName" and "lastName" separately');
    }
}
exports.default = User;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9tb2RlbHMvVXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtDQUFxRDtBQUNyRCx5REFBa0Q7QUFFbEQsSUFBWSxVQUdYO0FBSEQsV0FBWSxVQUFVO0lBQ3BCLCtCQUFpQixDQUFBO0lBQ2pCLG1DQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFIVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUdyQjtBQUVELElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQix5QkFBYSxDQUFBO0lBQ2IseUJBQWEsQ0FBQTtBQUNmLENBQUMsRUFIVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUduQjtBQWNELFVBQTBCLFNBQVEsZ0JBQVM7SUFXekMsWUFBWSxJQUF5QjtRQUNuQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFKZCxZQUFPLEdBQWEsS0FBSyxDQUFDO1FBS3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM5QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDaEMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM5QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUM3RCxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzFCLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFakMsb0NBQW9DO1FBQ3BDLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUNyQyxJQUFJLENBQUMsV0FBVyxZQUFZLDBCQUFnQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLDBCQUFnQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FDekcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDakIsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM5QyxDQUFDO0lBRUQsSUFBSSxJQUFJLENBQUMsYUFBcUI7UUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQywrRUFBK0UsQ0FBQyxDQUFDO0lBQ25HLENBQUM7Q0FDRjtBQXBDRCx1QkFvQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlTW9kZWwsIEJhc2VNb2RlbFNjaGVtYSB9IGZyb20gJy4uL2Jhc2UnO1xuaW1wb3J0IE9BdXRoQ3JlZGVudGlhbHMgZnJvbSAnLi9PQXV0aENyZWRlbnRpYWxzJztcblxuZXhwb3J0IGVudW0gVXNlclN0YXR1cyB7XG4gIEFDVElWRSA9ICdhY3RpdmUnLFxuICBJTkFDVElWRSA9ICdpbmFjdGl2ZScsXG59XG5cbmV4cG9ydCBlbnVtIFVzZXJSb2xlIHtcbiAgUk9PVCA9ICdyb290JyxcbiAgVVNFUiA9ICd1c2VyJyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVc2VyU2NoZW1hIGV4dGVuZHMgQmFzZU1vZGVsU2NoZW1hIHtcbiAgaWQ/OiBzdHJpbmc7XG4gIGZpcnN0TmFtZTogc3RyaW5nO1xuICBsYXN0TmFtZTogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBwYXNzd29yZD86IHN0cmluZztcbiAgcm9sZTogVXNlclJvbGU7XG4gIHN0YXR1cz86IFVzZXJTdGF0dXM7XG4gIHZpcnR1YWw/OiBib29sZWFuO1xuICBjcmVkZW50aWFscz86IE9BdXRoQ3JlZGVudGlhbHM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXIgZXh0ZW5kcyBCYXNlTW9kZWwgaW1wbGVtZW50cyBVc2VyU2NoZW1hIHtcbiAgaWQ/OiBzdHJpbmc7XG4gIGZpcnN0TmFtZTogc3RyaW5nO1xuICBsYXN0TmFtZTogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBwYXNzd29yZD86IHN0cmluZztcbiAgcm9sZTogVXNlclJvbGU7XG4gIHN0YXR1cz86IFVzZXJTdGF0dXM7XG4gIHZpcnR1YWw/OiBib29sZWFuID0gZmFsc2U7XG4gIGNyZWRlbnRpYWxzPzogT0F1dGhDcmVkZW50aWFscztcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBQYXJ0aWFsPFVzZXJTY2hlbWE+KSB7XG4gICAgc3VwZXIoZGF0YSk7XG4gICAgdGhpcy5sYXN0TmFtZSA9IGRhdGEubGFzdE5hbWU7XG4gICAgdGhpcy5maXJzdE5hbWUgPSBkYXRhLmZpcnN0TmFtZTtcbiAgICB0aGlzLmVtYWlsID0gZGF0YS5lbWFpbDtcbiAgICB0aGlzLnBhc3N3b3JkID0gZGF0YS5wYXNzd29yZDtcbiAgICB0aGlzLnJvbGUgPSBkYXRhLnJvbGU7XG4gICAgdGhpcy5zdGF0dXMgPSBkYXRhLnN0YXR1cztcbiAgICB0aGlzLnZpcnR1YWwgPSAoZGF0YS5jcmVkZW50aWFscyAmJiBkYXRhLmNyZWRlbnRpYWxzLnZpcnR1YWwpID9cbiAgICAgIGRhdGEuY3JlZGVudGlhbHMudmlydHVhbCA6XG4gICAgICAoZGF0YS52aXJ0dWFsIHx8IHRoaXMudmlydHVhbCk7XG5cbiAgICAvLyBSZWxhdGlvbnNoaXAgYXR0cmlidXRlcyBlbmZvcmNpbmdcbiAgICB0aGlzLmNyZWRlbnRpYWxzID0gKGRhdGEuY3JlZGVudGlhbHMgPyAoXG4gICAgICBkYXRhLmNyZWRlbnRpYWxzIGluc3RhbmNlb2YgT0F1dGhDcmVkZW50aWFscyA/IGRhdGEuY3JlZGVudGlhbHMgOiBuZXcgT0F1dGhDcmVkZW50aWFscyhkYXRhLmNyZWRlbnRpYWxzKVxuICAgICkgOiB1bmRlZmluZWQpO1xuICB9XG5cbiAgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuZmlyc3ROYW1lfSAke3RoaXMubGFzdE5hbWV9YDtcbiAgfVxuXG4gIHNldCBuYW1lKF9pZ25vcmVkVmFsdWU6IHN0cmluZykge1xuICAgIHRocm93IG5ldyBFcnJvcignTmFtZSBpcyBhIHJlYWRvbmx5IHZhbHVlLCB5b3UgbXVzdCBlZGl0IFwiZmlyc3ROYW1lXCIgYW5kIFwibGFzdE5hbWVcIiBzZXBhcmF0ZWx5Jyk7XG4gIH1cbn1cbiJdfQ==